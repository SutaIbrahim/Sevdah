// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Sevdah.Data;
using System;

namespace Sevdah.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20180312135903_login")]
    partial class login
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sevdah.Models.AutorizacijskiToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IpAdresa");

                    b.Property<int>("KorisnickiNalogId");

                    b.Property<string>("Vrijednost");

                    b.Property<DateTime>("VrijemeEvidentiranja");

                    b.HasKey("Id");

                    b.HasIndex("KorisnickiNalogId");

                    b.ToTable("AutorizacijskiToken");
                });

            modelBuilder.Entity("Sevdah.Models.Dobavljac", b =>
                {
                    b.Property<int>("DobavljacID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adresa")
                        .HasMaxLength(100);

                    b.Property<int>("GradID");

                    b.Property<string>("ID_broj")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<double?>("Kredit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PDV_broj")
                        .IsRequired()
                        .HasMaxLength(13);

                    b.Property<string>("Telefon")
                        .HasMaxLength(100);

                    b.Property<string>("ZiroRacun")
                        .HasMaxLength(100);

                    b.HasKey("DobavljacID");

                    b.HasIndex("GradID");

                    b.ToTable("Dobavljaci");
                });

            modelBuilder.Entity("Sevdah.Models.Grad", b =>
                {
                    b.Property<int>("GradID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("GradID");

                    b.ToTable("Gradovi");
                });

            modelBuilder.Entity("Sevdah.Models.KorisnickiNalog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KorisnickoIme");

                    b.Property<string>("Lozinka");

                    b.HasKey("ID");

                    b.ToTable("KorisnickiNalog");
                });

            modelBuilder.Entity("Sevdah.Models.Kupac", b =>
                {
                    b.Property<int>("KupacID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adresa")
                        .HasMaxLength(100);

                    b.Property<int>("GradID");

                    b.Property<string>("ID_broj")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<double?>("Kredit");

                    b.Property<string>("NazivKupca")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PDV_broj")
                        .IsRequired()
                        .HasMaxLength(13);

                    b.HasKey("KupacID");

                    b.HasIndex("GradID");

                    b.ToTable("Kupci");
                });

            modelBuilder.Entity("Sevdah.Models.OdobreniRabat", b =>
                {
                    b.Property<int>("OdobreniRabatID")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("IznosPostotci");

                    b.Property<int>("KupacID");

                    b.Property<int>("ProizvodID");

                    b.HasKey("OdobreniRabatID");

                    b.HasIndex("KupacID");

                    b.HasIndex("ProizvodID");

                    b.ToTable("OdobreniRabat");
                });

            modelBuilder.Entity("Sevdah.Models.Proizvod", b =>
                {
                    b.Property<int>("ProizvodID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BarKod");

                    b.Property<double>("CijenaBezPDV");

                    b.Property<double>("CijenaSaPDV");

                    b.Property<float>("Masa");

                    b.Property<string>("Naziv");

                    b.Property<int>("SkladisteID");

                    b.HasKey("ProizvodID");

                    b.HasIndex("SkladisteID");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("Sevdah.Models.ProizvodDobavljac", b =>
                {
                    b.Property<int>("ProizvodDobavljacID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DobavljacID");

                    b.Property<int>("VrstaProizvodaID");

                    b.HasKey("ProizvodDobavljacID");

                    b.HasIndex("DobavljacID");

                    b.HasIndex("VrstaProizvodaID");

                    b.ToTable("ProizvodDobavljac");
                });

            modelBuilder.Entity("Sevdah.Models.Racun", b =>
                {
                    b.Property<int>("RacunID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrojFiskalnogRacuna");

                    b.Property<string>("BrojRacuna");

                    b.Property<DateTime>("Datum");

                    b.Property<double>("DosadPlaceno");

                    b.Property<int>("KupacID");

                    b.Property<float>("PDV");

                    b.Property<bool>("Placeno");

                    b.Property<double>("UkupnoBezPDV");

                    b.Property<int>("UkupnoZaNaplatu");

                    b.HasKey("RacunID");

                    b.HasIndex("KupacID");

                    b.ToTable("Racuni");
                });

            modelBuilder.Entity("Sevdah.Models.RacunDobavljaca", b =>
                {
                    b.Property<int>("RacunDobavljacaID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrojRacuna");

                    b.Property<DateTime>("Datum");

                    b.Property<int>("DobavljacID");

                    b.Property<double>("DosadPlaceno");

                    b.Property<bool>("Placeno");

                    b.Property<double>("UkupnoBezPDV");

                    b.Property<double>("UkupnoSaPDV");

                    b.HasKey("RacunDobavljacaID");

                    b.HasIndex("DobavljacID");

                    b.ToTable("RacuniDobavljaca");
                });

            modelBuilder.Entity("Sevdah.Models.RacunProizvod", b =>
                {
                    b.Property<int>("RacunProizvodID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("CijenaBezPDV");

                    b.Property<double>("IznosBezPDV");

                    b.Property<double>("IznosRabata");

                    b.Property<float>("KolicinaKG");

                    b.Property<int>("ProizvodID");

                    b.Property<float>("Rabat");

                    b.Property<int>("RacunID");

                    b.HasKey("RacunProizvodID");

                    b.HasIndex("ProizvodID");

                    b.HasIndex("RacunID");

                    b.ToTable("RacunProizvodi");
                });

            modelBuilder.Entity("Sevdah.Models.RacunProizvodDobavljaca", b =>
                {
                    b.Property<int>("RacunProizvodDobavljacaID")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("IznosBezPDV");

                    b.Property<double>("IznosSaPDV");

                    b.Property<float>("KolicinaUkomadima");

                    b.Property<int>("RacunDobavljacaID");

                    b.Property<int>("VrstaProizvodaID");

                    b.HasKey("RacunProizvodDobavljacaID");

                    b.HasIndex("RacunDobavljacaID");

                    b.HasIndex("VrstaProizvodaID");

                    b.ToTable("RacunProizvodDobavljaca");
                });

            modelBuilder.Entity("Sevdah.Models.Skladiste", b =>
                {
                    b.Property<int>("SkladisteID")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("KolicinaUKg");

                    b.Property<string>("VrstaKafe");

                    b.HasKey("SkladisteID");

                    b.ToTable("Skladiste");
                });

            modelBuilder.Entity("Sevdah.Models.Uplata", b =>
                {
                    b.Property<int>("UplataID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrojIzvoda");

                    b.Property<DateTime>("Datum");

                    b.Property<double>("Iznos");

                    b.Property<int>("KupacID");

                    b.HasKey("UplataID");

                    b.HasIndex("KupacID");

                    b.ToTable("Uplate");
                });

            modelBuilder.Entity("Sevdah.Models.UplataDobavljacu", b =>
                {
                    b.Property<int>("UplataDobavljacuID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brojizvoda");

                    b.Property<DateTime>("Datum");

                    b.Property<int>("DobavljacID");

                    b.Property<double>("Iznos");

                    b.Property<int?>("RacunDobavljacaID");

                    b.HasKey("UplataDobavljacuID");

                    b.HasIndex("DobavljacID");

                    b.HasIndex("RacunDobavljacaID");

                    b.ToTable("UplateDobavljacu");
                });

            modelBuilder.Entity("Sevdah.Models.VrstaProizvoda", b =>
                {
                    b.Property<int>("VrstaProizvodaID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("VrstaProizvodaID");

                    b.ToTable("VrsteProizvoda");
                });

            modelBuilder.Entity("Sevdah.Models.AutorizacijskiToken", b =>
                {
                    b.HasOne("Sevdah.Models.KorisnickiNalog", "KorisnickiNalog")
                        .WithMany()
                        .HasForeignKey("KorisnickiNalogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.Dobavljac", b =>
                {
                    b.HasOne("Sevdah.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.Kupac", b =>
                {
                    b.HasOne("Sevdah.Models.Grad", "Grad")
                        .WithMany()
                        .HasForeignKey("GradID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.OdobreniRabat", b =>
                {
                    b.HasOne("Sevdah.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sevdah.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.Proizvod", b =>
                {
                    b.HasOne("Sevdah.Models.Skladiste", "Skladiste")
                        .WithMany()
                        .HasForeignKey("SkladisteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.ProizvodDobavljac", b =>
                {
                    b.HasOne("Sevdah.Models.Dobavljac", "Dobavljac")
                        .WithMany()
                        .HasForeignKey("DobavljacID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sevdah.Models.VrstaProizvoda", "VrstaProizvoda")
                        .WithMany()
                        .HasForeignKey("VrstaProizvodaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.Racun", b =>
                {
                    b.HasOne("Sevdah.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.RacunDobavljaca", b =>
                {
                    b.HasOne("Sevdah.Models.Dobavljac", "Dobavljac")
                        .WithMany()
                        .HasForeignKey("DobavljacID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.RacunProizvod", b =>
                {
                    b.HasOne("Sevdah.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sevdah.Models.Racun", "Racun")
                        .WithMany()
                        .HasForeignKey("RacunID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.RacunProizvodDobavljaca", b =>
                {
                    b.HasOne("Sevdah.Models.RacunDobavljaca", "RacunDobavljaca")
                        .WithMany()
                        .HasForeignKey("RacunDobavljacaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sevdah.Models.VrstaProizvoda", "VrstaProizvoda")
                        .WithMany()
                        .HasForeignKey("VrstaProizvodaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.Uplata", b =>
                {
                    b.HasOne("Sevdah.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sevdah.Models.UplataDobavljacu", b =>
                {
                    b.HasOne("Sevdah.Models.Dobavljac", "Dobavljac")
                        .WithMany()
                        .HasForeignKey("DobavljacID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sevdah.Models.RacunDobavljaca", "RacunDobavljaca")
                        .WithMany()
                        .HasForeignKey("RacunDobavljacaID");
                });
#pragma warning restore 612, 618
        }
    }
}
